<?xml version="1.0" encoding="UTF-8"?>
<!--
	Copyright (c) 2011-2012, David C. Epler

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<project name="Unofficial Updater 2" default="runType">
	<description>Ant script that will fetch then apply hotfixes and security updates for ColdFusion 8.0.1 or 9.0.1</description>
	
	<!-- Ant-Contrib makes writting Ant tasks so much easier -->
	<typedef resource="net/sf/antcontrib/antlib.xml" />	

	<!-- load properties and determine some items regarding the environment running in -->
	<property file="uu2.properties"/>	
	
	<available file="downloads/download.properties" property="hasDownloads" />
	<available file="ant.install.properties" property="isAntInstaller" />
	
	<condition property="isRoot" else="false">
		<equals arg1="root" arg2="${user.name}" />
	</condition>

	<condition property="isUnix" else="false">
		<os family="unix"/>
	</condition>
	
	<tstamp>
		<format property="ts.filename" pattern="yyyyMMdd-HHmmss"/>
		<format property="ts.full" pattern="EEEE, MMMM dd, yyyy 'at' HH:mm:ss z" />
	</tstamp>
	
	<!-- if running as standalone Ant script, add depends="get_install_info" to the target below -->
	<target name="runType" description="Just download or download and apply">

		<record name="uu2-${ts.filename}.log" action="start" loglevel="info" />
		<echo message="Starting UU2 on ${ts.full}" />
		<if>
			<istrue value="${downloadOnly}" />
			<then>
				<if>
					<isfalse value="${isAntInstaller}" />
					<then>
						<antcall target="proxyInfo" />
					</then>
				</if>
				<antcall target="download_hotfixes" />
				<antcall target="repack_uu2" />
			</then>
			<else>
				<antcall target="preUpdate" />
			</else>
		</if>
		<record name="uu2-${ts.filename}.log" action="stop" />
		
	</target>
	
    <target name="preUpdate" description="Preliminary work for update">

		<if>
			<isfalse value="${applyUpdate}" />
			<then>
				<fail message="Need to re-run the script and enter correct values, sorry." />
			</then>
		</if>
		

		<!-- Download hotfixes if they aren't local -->
		<if>
			<not>
				<isset property="hasDownloads" />
			</not>
			<then>
				<antcall target="download_hotfixes" />
				<antcall target="repack_uu2" />
			</then>
		</if>
   	
		<property file="downloads/download.properties"/>

    	<echo message="UU2 running as user: ${user.name}" />
       	<echo message="UU2 running on OS: ${os.name} ${os.version}" />

		<if>
			<istrue value="${isUnix}"/>
		<then>
			
			<!-- determine existing owner for specific directories -->
			<!-- need to inspect files that aren't touched by Update 1 -->
			<exec executable="ls" outputproperty="ls.CFIDE" osfamily="unix" failonerror="true">
				<arg value="-al"/>
				<arg value="${cfideDir}/Application.cfm" />
			</exec>
			<propertyregex property="owner.CFIDE" input="${ls.CFIDE}" regexp="(\S+)(\s+)(\S+)(\s+)(\S+)" select="\5" />
			
			<exec executable="ls" outputproperty="ls.WEBINF" osfamily="unix" failonerror="true">
				<arg value="-al"/>
				<arg value="${webinfDir}/lib/cfx.jar" />
			</exec>
			<propertyregex property="owner.WEBINF" input="${ls.WEBINF}" regexp="(\S+)(\s+)(\S+)(\s+)(\S+)" select="\5" />
			
			<if>
				<equals arg1="${installType}" arg2="standalone" />
			<then>

				<exec executable="ls" outputproperty="ls.CFUSIONLIB" osfamily="unix" failonerror="true">
					<arg value="-al"/>
					<arg value="${cfusionLibDir}/cfusion-req.jar" />
				</exec>
				<propertyregex property="owner.CFUSIONLIB" input="${ls.CFUSIONLIB}" regexp="(\S+)(\s+)(\S+)(\s+)(\S+)" select="\5" />
				
			</then>
			</if>
			
			<!-- warning notice if not running as root -->
			<if>
				<isfalse value="${isRoot}"/>
			<then>
				<echo>

***[ WARNING ]*****************************************************
**
** Unofficial Updater 2 is running as a non-root user, it might
** fail applying updates if ownership is not correct
**
*******************************************************************
				</echo>
			</then>
			</if>
		</then>
		</if>  
    	
    	<!-- check ColdFusion version -->
    	<trycatch property="versionException">
    	
    		<try>
    	    	<java classpath="${cfusionLibDir}/cfusion.jar" classname="coldfusion.tools.CfinfoMain" outputproperty="reportedVersion" fork="true" failonerror="true">
    	            <arg value="-version"/>
    	    	</java>
    		</try>

    		<catch>
    			<echo>Unable to determine ColdFusion version via Java, fallback to hashes</echo>
    			
				<checksum algorithm="SHA-512" file="${cfusionLibDir}/cfusion.jar" property="cfusion.jar.sha-512" />
    			
    			<switch value="${cfusion.jar.sha-512}">
    				<!-- "Official" 8.0.1 build version as published by Adobe -->
    				<case value="${cf801.195765.cfusion.jar.sha-512}">
    					<property name="reportedVersion" value="8,0,1,195765" />
    				</case>
    				<!-- build reported by CF 8 Linux with Update 1 applied (8.0.0 -> 8.0.1) -->
    				<case value="${cf801.196946.cfusion.jar.sha-512}">
    					<property name="reportedVersion" value="8,0,1,196946" />
    				</case>
    				<case value="${cf901.274733.cfusion.jar.sha-512}">
    					<property name="reportedVersion" value="9,0,1,274733" />
    				</case>
    				<default>
    					<property name="reportedVersion" value="UNKNOWN" />
    				</default>
    			</switch>		
    		
    		</catch>
    	
    	</trycatch>
    	
    	<echo message="Found ColdFusion version ${reportedVersion}" />
        	
		<switch value="${reportedVersion}">
			<case value="8,0,1,195765">
				<antcall target="update_801" />
			</case>
			<case value="8,0,1,196946">
				<antcall target="update_801" />
			</case>
			<case value="9,0,1,274733">
				<antcall target="update_901" />
			</case>
			<default>
    			<fail message="Unofficial Updater 2 only runs against ColdFusion 8.0.1 or 9.0.1" />
			</default>
		</switch>		
    	
    </target>

	
	<!-- Download Hotfixes -->
	<target name="download_hotfixes" description="Download hotfixes from Adobe" >

		<if>
			<istrue value="${needProxy}" />
			<then>
				<setproxy proxyhost="${proxyHost}" proxyport="${proxyPort}" proxyuser="${proxyUser}" proxypassword="${proxyPassword}" />
			</then>
		</if>
		
		<mkdir dir="downloads" />
		
		<for list="${hotfix_ids}" param="hotfix">
			<sequential>
				
				<mkdir dir="downloads/@{hotfix}" />
				<echo message="Downloading: ${@{hotfix}.description}" />

				<for list="${@{hotfix}.files}" param="filename">
					<sequential>
				    	<get src="${@{hotfix}.url}@{filename}" dest="downloads/@{hotfix}/@{filename}" verbose="true" usetimestamp="true" />

						<checksum algorithm="SHA-512" file="downloads/@{hotfix}/@{filename}" property="${@{hotfix}.@{filename}.sha-512}" verifyproperty="@{filename}_isOK" />
						
						<if>
							<isfalse value="${@{filename}_isOK}" />
							<then>
								<fail message="Checksum for @{hotfix} file @{filename} is not correct! Either download is corrupt or Adobe updated the file." />
							</then>
						</if>						

					</sequential>
				</for>
			</sequential>
		</for>		
		
		<propertyfile file="downloads/download.properties" comment="Hotfix/Security Updates Downloaded from Adobe">
			<entry key="download.date" type="date" value="now" pattern="EEEE, MMMM dd, yyyy 'at' HH:mm:ss z" />
			<entry key="download.result" value="success" />
		</propertyfile>
		
	</target>
		

	<target name="repack_uu2" description="Repack UU2 with downloaded updates from Adobe" if="isAntInstaller">
	
		<!-- modify Ant Installer script to skip first run screen -->
		<replace file="antinstall-config.xml" token='property="firstRun" value="true"' value='property="firstRun" value="false"' />
		<replace file="antinstall-config.xml" token='  GO!  ' value='Apply Updates' />
		
		<if>
			<istrue value="${enableAuto}" />
			<then>
				<replace file="antinstall-config.xml" token='swing,text' value='swing,text,text-auto' />
				<replace file="antinstall-config.xml" token='loadDefaults="false"' value='loadDefaults="true"' />
			</then>
		</if>
		
		<echo message="Repacking UU2 with downloaded updates from Adobe" />
		<!-- pack everything up except current ant.install.properties -->
		<jar destfile="${user.dir}/Unofficial-Updater2-with-downloads.jar" basedir=".">
			<exclude name="**/ant.install.properties" />
			<manifest>
				<attribute name="Main-Class" value="org.tp23.antinstaller.selfextract.SelfExtractor" />
				<attribute name="Look-And-Feel" value="native" />
			</manifest>
		</jar>
		
	</target>	

	
	<!-- Backup -->
	<target name="backup" description="Create backups of CFIDE, WEB-INF (and lib if standalone or admin if jrun)">

		<!-- additional backups based upon install type -->		
		<switch value="${installType}">
			<case value="standalone">
				<echo message="Creating backup of ${cfusionLibDir}" />
				<zip destfile="${backupDir}/lib-uu2-${ts.filename}.zip" basedir="${cfusionLibDir}" />
			</case>
			<case value="jrun">
				<echo message="Creating backup of ${jrunInstallDir}/servers/admin" />
				<zip destfile="${backupDir}/jrun-admin-uu2-${ts.filename}.zip" basedir="${jrunInstallDir}/servers/admin" />
			</case>
			<default />
		</switch>

		<echo message="Creating backup of ${webinfDir}" />
		<if>
			<istrue value="${excludeCFClasses}" />
			<then>
				<echo message="Excluding files from WEB-INF/cfclasses" />
				<zip destfile="${backupDir}/WEB-INF-uu2-${ts.filename}.zip" basedir="${webinfDir}" excludes="cfclasses/**" />
			</then>
			<else>
				<zip destfile="${backupDir}/WEB-INF-uu2-${ts.filename}.zip" basedir="${webinfDir}" />
			</else>
		</if>

		<echo message="Creating backup of ${cfideDir}" />
		<zip destfile="${backupDir}/CFIDE-uu2-${ts.filename}.zip" basedir="${cfideDir}" />
		
	</target>
	

	<target name="directoryPrep" description="Remove unneeded files">
		
		<echo message="Clearing all existing Hot Fixes from ${hotfixDir}" />
		<delete>
			<fileset dir="${hotfixDir}" includes="*.jar"/>
		</delete>

		<delete file="${hotfixDir}/empty.txt" />
		<delete file="${hotfixDir}/unofficial-updater2.txt" />
		
		<if>
			<available file="${webinfDir}/cfclasses" type="dir" />
			<then>
				<echo message="Clearing all compiled code from ${webinfDir}/cfclasses" />
				<delete>
					<fileset dir="${webinfDir}/cfclasses" includes="*.class"/>
				</delete>
			</then>
		</if>
		
	</target>

	
	<target name="uu2.text" description="Drop text file into lib/updates for uu2">

		<echo message="Noting when UU2 was run in ${hotfixDir}" />
		<echo file="${hotfixDir}/unofficial-updater2.txt" append="false">
Unofficial Updater 2 was run on ${ts.full}
Using files downloaded on ${download.date}
		</echo>		
		
	</target>

	<target name="cleanup" description="Cleanup after UU2 is done">
		<if>
			<and>
				<istrue value="${isUnix}"/>
				<istrue value="${isRoot}"/>
			</and>
		<then>
			
			<echo message="Settings owner of files in ${cfideDir} to ${owner.CFIDE}" />
			<chown owner="${owner.CFIDE}" type="both" maxparallel="100" verbose="true">
				<fileset dir="${cfideDir}" includes="**/*" />
			</chown>
				
			<echo message="Settings owner of files in ${webinfDir} to ${owner.WEBINF}" />
			<chown owner="${owner.WEBINF}" type="both" maxparallel="100" verbose="true">
				<fileset dir="${webinfDir}" includes="**/*" />
			</chown>				

			<if>
				<equals arg1="${installType}" arg2="standalone" />
			<then>

				<echo message="Settings owner of files in ${cfusionLibDir} to ${owner.CFUSIONLIB}" />
				<chown owner="${owner.CFUSIONLIB}" type="both" maxparallel="100" verbose="true">
					<fileset dir="${cfusionLibDir}" includes="**/*" />
				</chown>				
					
			</then>
			</if>
				
		</then>
		</if>  
  
	</target>

	<target name="proxyInfo" description="get proxy information">

		<input message="Do you need to use a proxy?" validargs="yes,no" addproperty="needProxy" defaultvalue="no" />
		
		<!-- get proxy settings if needed -->
		<if>
			<istrue value="${needProxy}" />
			<then>
				<input message="Proxy Host:" addproperty="proxyHost" />
				<input message="Proxy Port:" addproperty="proxyPort" defaultvalue="80" />
				<input message="Proxy User:" addproperty="proxyUser" />
				<input message="Proxy Password:" addproperty="proxyPassword">
					<handler classname="org.apache.tools.ant.input.SecureInputHandler" />
				</input>				
			</then>
		</if>
		
	</target>
	
	<target name="get_install_info" description="Get information about ColdFusion installation">
		
		<!-- first time running if downloads aren't present -->
		<if>
			<not>
				<isset property="hasDownloads" />
			</not>
			<then>
				<echo>Since this is the first time this version of Unofficial Updater 2 has been run, it will download ALL updates from Adobe then pack them into a new Unofficial-Updater2-with-downloads.jar that can be run again without connecting to the Internet</echo>
			
				<antcall target="proxyInfo" />
			</then>
			<else>
				<property name="needProxy" value="no"/>
			</else>
		</if>

		<input message="How is ColdFusion Installed" validargs="standalone,jrun,j2ee" addproperty="installType" defaultvalue="standalone" />
		
		<switch value="${installType}">
			<case value="standalone">
				<if>
					<os family="windows" />
					<then>
						<property name="default_cfInstallDir" value="C:\ColdFusion8"/>
					</then>
					<else>
						<property name="default_cfInstallDir" value="/opt/coldfusion8"/>
					</else>
				</if>
				<input message="ColdFusion directory" addproperty="cfInstallDir" defaultvalue="${default_cfInstallDir}" />
				<if>
					<os family="windows" />
					<then>
						<property name="default_webinfDir" value="${cfInstallDir}\wwwroot\WEB-INF"/>
						<property name="default_cfideDir" value="${cfInstallDir}\wwwroot\CFIDE"/>
					</then>
					<else>
						<property name="default_webinfDir" value="${cfInstallDir}/wwwroot/WEB-INF"/>
						<property name="default_cfideDir" value="${cfInstallDir}/wwwroot/CFIDE"/>
					</else>
				</if>
				<property name="jrunInstallDir" value="" />
			</case>
			<case value="jrun">
				<if>
					<os family="windows" />
					<then>
						<property name="default_jrunInstallDir" value="C:\JRun4"/>
					</then>
					<else>
						<property name="default_jrunInstallDir" value="/opt/jrun4"/>
					</else>
				</if>
				<input message="JRun4 directory" addproperty="jrunInstallDir" defaultvalue="${default_jrunInstallDir}" />
				<if>
					<os family="windows" />
					<then>
						<property name="default_webinfDir" value="${jrunInstallDir}\servers\cfusion\cfusion-ear\cfusion-war\WEB-INF"/>
					</then>
					<else>
						<property name="default_webinfDir" value="${jrunInstallDir}/servers/cfusion/cfusion-ear/cfusion-war/WEB-INF"/>
					</else>
				</if>
				<property name="cfInstallDir" value="" />
				<property name="default_cfideDir" value=""/>
			</case>
			<case value="j2ee">
				<property name="default_webinfDir" value=""/>
				<property name="default_cfideDir" value=""/>
				<property name="cfInstallDir" value="" />
				<property name="jrunInstallDir" value="" />
			</case>
		</switch>		

		<input message="WEB-INF directory" addproperty="webinfDir" defaultvalue="${default_webinfDir}" />
		<input message="CFIDE directory" addproperty="cfideDir" defaultvalue="${default_cfideDir}" />
		
		<input message="Backup Directory" addproperty="backupDir" defaultvalue="${user.dir}" />
		<input message="Exclude WEB-INF/cfclasses?" validargs="yes,no" addproperty="excludeCFClasses" defaultvalue="no" />

		<!-- figure out additional paths -->
		<if>
			<equals arg1="${installType}" arg2="standalone" />
			<then>
				<property name="cfusionLibDir" value="${cfInstallDir}/lib" />
			</then>
			<else>
				<property name="cfusionLibDir" value="${webinfDir}/cfusion/lib" />
			</else>
		</if>
		
		<property name="hotfixDir" value="${cfusionLibDir}/updates" />

		<echo>
Install Type .........: ${installType}

Using the following directories:
 * WEB-INF ...........: ${webinfDir}
 * CFIDE .............: ${cfideDir}
 * CFusion Lib .......: ${cfusionLibDir} 
			
 * Backups ...........: ${backupDir} 
 * Exclude cfclasses .: ${excludeCFClasses} 
 		</echo>

		<input message="Apply Update to the above?" validargs="yes,no" addproperty="applyUpdate" defaultvalue="yes" />

	</target>
	
<!-- *********************************************** -->
<!-- ColdFusion 8.0.1 Hot Fixes and Security Updates -->
<!-- *********************************************** -->
	<target name="update_801" description="everything to update 8.0.1">

		<antcall target="backup" />
		<antcall target="directoryPrep" />

		<antcall target="cpsid_52915" />
		<antcall target="kb403597" />
		<antcall target="kb403795" />
		<antcall target="kb403411" />
		<antcall target="cpsid_84585" />
		<antcall target="cpsid_86589" />
		<antcall target="apsb09-09" />
<!--		<antcall target="cpsid_93043_cf801" /> -->
		<antcall target="apsb12-15_cf801" />
		
		<!-- only for jrun installs -->
		<if>
			<equals arg1="${installType}" arg2="jrun" />
			<then>
				<antcall target="apsb09-12" />
			</then>
		</if>

		<antcall target="uu2.text" />
		<antcall target="cleanup" />
		
	</target>
	
    <target name="cpsid_52915" description="Cumulative Hot Fix 4 for ColdFusion 8.0.1">
    	
		<!-- update of cfmx_bootstrap.jar now from APSB12-06 -->
		<!--
			<echo message="Applying cfmx_bootstrap.jar to ${webinfDir}/lib/" />
			<unzip src="downloads/cpsid_52915/chf8010004.zip" dest="${webinfDir}/lib/">
				<patternset>
					<include name="cfmx_bootstrap.jar"/>
				</patternset>
			</unzip>
		-->
		<echo message="Applying chf8010004.jar to ${hotfixDir}" />
		<unzip src="downloads/cpsid_52915/chf8010004.zip" dest="${hotfixDir}">
			<patternset>
				<include name="chf8010004.jar"/>
			</patternset>
		</unzip>
    	
    </target>


    <target name="kb403597" description="Patch for HTML grid and cfmenu (hf801-71634)">

		<!-- hf801-71634.jar not needed was rolled into CHF2+ -->
		<echo message="Applying trigger.gif to ${cfideDir}/scripts/ajax/resources/ext/images/default/form" />
		<unzip src="downloads/kb403597/hf801-71634.zip" dest="${cfideDir}/scripts/ajax/resources/ext/images/default/form">
			<patternset>
				<include name="trigger.gif"/>
			</patternset>
		</unzip>

    	<echo message="Applying yui.css to ${cfideDir}/scripts/ajax/resources/yui" />
		<unzip src="downloads/kb403597/hf801-71634.zip" dest="${cfideDir}/scripts/ajax/resources/yui">
			<patternset>
				<include name="yui.css"/>
			</patternset>
		</unzip>
    	
    </target>

	
    <target name="kb403795" description="CFPresentation patch for audio issues and flash slide sizing problem (hf801-70839)">
    	
		<!-- hf801-70839.jar not needed was rolled into CHF2+ -->
		<echo message="Applying files to ${cfusionLibDir}/preso" />
		<unzip src="downloads/kb403795/hf801-70839.zip" dest="${cfusionLibDir}/preso">
			<patternset>
				<exclude name="*.jar"/>
				<exclude name="preso"/>
			</patternset>
		</unzip>
    	
    </target>

	
    <target name="kb403411" description="Patch for CFImage and Image functions in ColdFusion 8.0.1 (hf801-71557)">
    	
		<!--
		kb403411 calls for rename of metadata-extractor-2.3.1.jar to metadata-extractor-2.3.1.jar.bak
		installs encountered all have metadata-extractor-2.2.2.jar not metadata-extractor-2.3.1.jar
		removing any existing version of metadata-extractor instead
		-->
		<echo message="Removing any metadata-extractor-*.jar from ${cfusionLibDir}" />
		<delete>
			<fileset dir="${cfusionLibDir}" includes="metadata-extractor-*.jar"/>
		</delete>
				
		<echo message="Applying metadata-extractor-2.3.1.jar to ${cfusionLibDir}" />
		<unzip src="downloads/kb403411/hf801-71557.zip" dest="${cfusionLibDir}">
			<patternset>
				<include name="metadata-extractor-2.3.1.jar"/>
			</patternset>
		</unzip>
    	
		<echo message="Applying hf801-71557.jar to ${hotfixDir}" />
		<unzip src="downloads/kb403411/hf801-71557.zip" dest="${hotfixDir}">
			<patternset>
				<include name="hf801-71557.jar"/>
			</patternset>
		</unzip>
    	
    </target>

	
    <target name="cpsid_84585" description="Update for expired certificate on CFForm controls (May 2010)">
    	
		<echo message="Applying cfapplets.jar to ${cfideDir}/classes" />
		<unzip src="downloads/cpsid_84585/cfapplets_cps_84585.zip" dest="${cfideDir}/classes">
			<patternset>
				<include name="cfapplets.jar"/>
			</patternset>
		</unzip>
    	
    </target>

	
    <target name="cpsid_86589" description="Deadlock caused by compiler and cache lock (hf801-76563)">
    	
		<echo message="Applying hf801-76563.jar to ${hotfixDir}" />
		<unzip src="downloads/cpsid_86589/hf801-76563.zip" dest="${hotfixDir}">
			<patternset>
				<include name="hf801-76563.jar"/>
			</patternset>
		</unzip>
    	
    </target>

	
    <target name="apsb09-09" description="Hotfix available for potential ColdFusion 8 input sanitization issue">

		<!--
		hf801-77218.jar rolled into CHF4, explicitly listed to be removed in CHF4 and APSB12-06
		Other files are in APSB12-06
		
		to complete APSB09-09 still need to remove cf5_upload.cfm and cf5_connector.cfm
		from CFIDE/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm
		 -->
		<echo message="Removing cf5_*.cfm from ${cfideDir}/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm" />
		<if>
			<available file="${cfideDir}/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm" type="dir" />
			<then>
		    	<delete>
					<fileset dir="${cfideDir}/scripts/ajax/FCKeditor/editor/filemanager/connectors/cfm" includes="cf5_*.cfm"/>
				</delete>
			</then>
		</if>
    	
    </target>
	
<!--
	<target name="cpsid_93043_cf801" description="Security update: Hotfix available for ColdFusion 8.0.1 (APSB12-06)">
    	
		<echo message="Unpacking CF801.zip" />
		<unzip src="downloads/cpsid_93043_fix1/CF801.zip" dest="downloads/cpsid_93043_fix1/" />
				
		<echo message="Applying files to ${cfusionLibDir}" />
		<copy todir="${cfusionLibDir}" verbose="true" overwrite="true" preservelastmodified="true">
			<fileset dir="downloads/cpsid_93043_fix1/CF801/lib"/>
		</copy>
				
		<echo message="Applying files to ${cfideDir}" />
		<unzip src="downloads/cpsid_93043/CFIDE-801.zip" dest="${cfideDir}/.." />

		<echo message="Applying files to ${webinfDir}" />
		<unzip src="downloads/cpsid_93043_fix1/CF801/WEB-INF.zip" dest="${webinfDir}/.." />
    	
    </target>
-->

	<target name="apsb12-15_cf801" description="Security update: Hotfix available for ColdFusion 8.0.1 (APSB12-15)">
    	
		<echo message="Unpacking CF801.zip" />
		<unzip src="downloads/apsb12-15/CF801.zip" dest="downloads/apsb12-15/" />
				
		<echo message="Applying files to ${cfusionLibDir}" />
		<copy todir="${cfusionLibDir}" verbose="true" overwrite="true" preservelastmodified="true">
			<fileset dir="downloads/apsb12-15/CF801/lib"/>
		</copy>
				
		<echo message="Applying files to ${cfideDir}" />
		<unzip src="downloads/apsb12-15/CFIDE-801.zip" dest="${cfideDir}/.." />

		<echo message="Applying files to ${webinfDir}" />
		<unzip src="downloads/apsb12-15/CF801/WEB-INF.zip" dest="${webinfDir}/.." />
    	
    </target>
	
    <target name="apsb09-12" description="Security Update: Hotfixes available for ColdFusion and JRun (APSB09-12)">
    	
		<echo message="Applying jmc-app.ear to ${jrunInstallDir}/servers/admin" />
		<unzip src="downloads/apsb09-12/jmc-app2.zip" dest="${jrunInstallDir}/servers/admin">
			<patternset>
 				<include name="jmc-app.ear"/>
			</patternset>
		</unzip>
    	
    </target>


<!-- *********************************************** -->
<!-- ColdFusion 9.0.1 Hot Fixes and Security Updates -->
<!-- *********************************************** -->
	<target name="update_901" description="everything to update 9.0.1">

		<antcall target="backup" />
		<antcall target="directoryPrep" />
		
		<antcall target="cpsid_91836" />
<!--		<antcall target="cpsid_93043_cf901" /> -->
		<antcall target="apsb12-15_cf901" />
				
		<antcall target="uu2.text" />
		<antcall target="cleanup" />
		
	</target>

	
    <target name="cpsid_91836" description="Cumulative Hot Fix 2 (CHF2) for ColdFusion 9.0.1">
    	
		<echo message="Unpacking CF901.zip" />
		<unzip src="downloads/cpsid_91836/CF901.zip" dest="downloads/cpsid_91836/" />

		<echo message="Applying files to ${cfusionLibDir}" />
		<copy todir="${cfusionLibDir}" verbose="true" overwrite="true" preservelastmodified="true">
			<fileset dir="downloads/cpsid_91836/CF901/lib"/>
		</copy>
				
		<echo message="Applying files to ${cfideDir}" />
		<unzip src="downloads/cpsid_91836/CFIDE-901.zip" dest="${cfideDir}/.." />

		<echo message="Applying files to ${webinfDir}" />
		<unzip src="downloads/cpsid_91836/CF901/WEB-INF.zip" dest="${webinfDir}/.." />

    </target>

<!--
	<target name="cpsid_93043_cf901" description="Security update: Hotfix available for ColdFusion 9.0.1 (APSB12-06)">
    	
		<echo message="Unpacking CF901.zip" />
		<unzip src="downloads/cpsid_93043/CF901.zip" dest="downloads/cpsid_93043/" />
				
		<echo message="Applying files to ${cfusionLibDir}" />
		<copy todir="${cfusionLibDir}" verbose="true" overwrite="true" preservelastmodified="true">
			<fileset dir="downloads/cpsid_93043/CF901/lib"/>
		</copy>
				
		<echo message="Applying files to ${cfideDir}" />
		<unzip src="downloads/cpsid_93043/CFIDE-901.zip" dest="${cfideDir}/.." />

		<echo message="Applying files to ${webinfDir}" />
		<unzip src="downloads/cpsid_93043/CF901/WEB-INF.zip" dest="${webinfDir}/.." />
    	
    </target>
-->
	
	<target name="apsb12-15_cf901" description="Security update: Hotfix available for ColdFusion 9.0.1 (APSB12-15)">
    	
		<echo message="Unpacking CF901.zip" />
		<unzip src="downloads/apsb12-15/CF901.zip" dest="downloads/apsb12-15/" />
				
		<echo message="Applying files to ${cfusionLibDir}" />
		<copy todir="${cfusionLibDir}" verbose="true" overwrite="true" preservelastmodified="true">
			<fileset dir="downloads/apsb12-15/CF901/lib"/>
		</copy>
				
		<echo message="Applying files to ${cfideDir}" />
		<unzip src="downloads/apsb12-15/CFIDE-901.zip" dest="${cfideDir}/.." />

		<echo message="Applying files to ${webinfDir}" />
		<unzip src="downloads/apsb12-15/CF901/WEB-INF.zip" dest="${webinfDir}/.." />
    	
    </target>
	
</project>